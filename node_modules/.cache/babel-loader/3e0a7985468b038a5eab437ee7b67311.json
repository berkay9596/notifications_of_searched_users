{"ast":null,"code":"class DesoIdentity {\n  constructor() {\n    this.init = false;\n    this.pm_id = \"\";\n    this.source = null;\n    this.user = null;\n    this.pendingRequests = [];\n    this.identityWindow = null;\n    this.loginResolve = null;\n    this.signTxResolve = null;\n    this.IdentityUsersKey = \"identityUsersV2\";\n    this.transactionHex = \"\";\n    this.addListener();\n  }\n\n  loginAsync(accessLevel) {\n    return new Promise((resolve, reject) => {\n      this.identityWindow = window.open(\"https://identity.deso.org/log-in?accessLevelRequest=\" + accessLevel, null, \"toolbar=no, width=800, height=1000, top=0, left=0\");\n      this.loginResolve = resolve;\n    });\n  }\n\n  logout(publicKey) {\n    this.identityWindow = window.open(\"https://identity.deso.org/logout?publicKey=\" + publicKey, null, \"toolbar=no, width=800, height=1000, top=0, left=0\");\n    localStorage.removeItem(this.IdentityUsersKey);\n  }\n\n  logoutAsync(publicKey) {\n    return new Promise((resolve, reject) => {\n      this.identityWindow = window.open(\"https://identity.deso.org/logout?publicKey=\" + publicKey, null, \"toolbar=no, width=800, height=1000, top=0, left=0\");\n      this.loginResolve = resolve;\n    });\n  }\n\n  signTxAsync(transactionHex) {\n    return new Promise((resolve, reject) => {\n      this.signTxResolve = resolve;\n      this.transactionHex = transactionHex;\n      this.getInfo();\n      const id = this.uuid();\n      const user = JSON.parse(localStorage.getItem(this.IdentityUsersKey));\n      const payload = {\n        accessLevel: user.accessLevel,\n        accessLevelHmac: user.accessLevelHmac,\n        encryptedSeedHex: user.encryptedSeedHex,\n        transactionHex: transactionHex\n      };\n      this.source.postMessage({\n        id: id,\n        service: \"identity\",\n        method: \"sign\",\n        payload: payload\n      }, \"*\");\n    });\n  }\n\n  approveSignTx(transactionHex) {\n    this.identityWindow = window.open(\"https://identity.deso.org/approve?tx=\" + transactionHex, null, \"toolbar=no, width=800, height=1000, top=0, left=0\");\n  }\n\n  uuid() {\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function (c) {\n      var r = Math.random() * 16 | 0,\n          v = c === \"x\" ? r : r & 0x3 | 0x8;\n      return v.toString(16);\n    });\n  }\n\n  getInfo() {\n    console.log(\"getinfo\");\n    const id = this.uuid();\n    this.source.postMessage({\n      id: id,\n      service: \"identity\",\n      method: \"info\"\n    }, \"*\");\n  }\n\n  handleLogin(payload) {\n    console.log(payload);\n\n    if (this.identityWindow) {\n      this.identityWindow.close();\n      this.identityWindow = null;\n      const user = payload.users[payload.publicKeyAdded];\n\n      if (user) {\n        user[\"publicKey\"] = payload.publicKeyAdded;\n      }\n\n      localStorage.setItem(this.IdentityUsersKey, JSON.stringify(user));\n      this.loginResolve(user);\n    }\n  }\n\n  handleSign(payload) {\n    console.log(payload);\n    const signedTransactionHex = payload[\"signedTransactionHex\"];\n\n    if (this.identityWindow) {\n      this.identityWindow.close();\n      this.identityWindow = null;\n    }\n\n    this.signTxResolve(signedTransactionHex);\n  }\n\n  respond(e, t, n) {\n    e.postMessage({\n      id: t,\n      service: \"identity\",\n      payload: n\n    }, \"*\");\n  }\n\n  handleInit(e) {\n    if (!this.init) {\n      this.init = true;\n\n      for (const e of this.pendingRequests) {\n        console.log(\"i'm in the pendingRequests loop\");\n        e.source.postMessage(e, \"*\");\n      }\n\n      this.pendingRequests = [];\n      this.pm_id = e.data.id;\n      this.source = e.source;\n      console.log(\"this.source\", this.source);\n    }\n\n    this.respond(e.source, e.data.id, {});\n  }\n\n  postMessage(e) {\n    this.init ? this.iframe.contentWindow.postMessage(e, \"*\") : this.pendingRequests.push(e);\n  }\n\n  addListener() {\n    window.addEventListener(\"message\", message => {\n      // console.log(message)\n      const {\n        data: {\n          method,\n          service,\n          payload\n        }\n      } = message;\n\n      if (service !== \"identity\") {\n        return;\n      }\n\n      if (method === \"initialize\") {\n        this.handleInit(message);\n      } else if (\"signedTransactionHex\" in payload) {\n        console.log(\"signedTransactionHex\", payload);\n        this.handleSign(payload);\n      } else if (\"approvalRequired\" in payload) {\n        console.log(\"approvalRequired\", payload);\n        this.approveSignTx(this.transactionHex);\n      } else if (method === \"login\") {\n        this.handleLogin(payload);\n      }\n    });\n  }\n\n}\n\nexport default DesoIdentity;","map":{"version":3,"sources":["C:/Users/PC/Desktop/notifications app/src/libs/desoIdentity.jsx"],"names":["DesoIdentity","constructor","init","pm_id","source","user","pendingRequests","identityWindow","loginResolve","signTxResolve","IdentityUsersKey","transactionHex","addListener","loginAsync","accessLevel","Promise","resolve","reject","window","open","logout","publicKey","localStorage","removeItem","logoutAsync","signTxAsync","getInfo","id","uuid","JSON","parse","getItem","payload","accessLevelHmac","encryptedSeedHex","postMessage","service","method","approveSignTx","replace","c","r","Math","random","v","toString","console","log","handleLogin","close","users","publicKeyAdded","setItem","stringify","handleSign","signedTransactionHex","respond","e","t","n","handleInit","data","iframe","contentWindow","push","addEventListener","message"],"mappings":"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","sourcesContent":["class DesoIdentity {\r\n  constructor() {\r\n    this.init = false;\r\n    this.pm_id = \"\";\r\n    this.source = null;\r\n    this.user = null;\r\n    this.pendingRequests = [];\r\n    this.identityWindow = null;\r\n    this.loginResolve = null;\r\n    this.signTxResolve = null;\r\n    this.IdentityUsersKey = \"identityUsersV2\";\r\n    this.transactionHex = \"\";\r\n\r\n    this.addListener();\r\n  }\r\n\r\n  loginAsync(accessLevel) {\r\n    return new Promise((resolve, reject) => {\r\n      this.identityWindow = window.open(\r\n        \"https://identity.deso.org/log-in?accessLevelRequest=\" + accessLevel,\r\n        null,\r\n        \"toolbar=no, width=800, height=1000, top=0, left=0\"\r\n      );\r\n      this.loginResolve = resolve;\r\n    });\r\n  }\r\n\r\n  logout(publicKey) {\r\n    this.identityWindow = window.open(\r\n      \"https://identity.deso.org/logout?publicKey=\" + publicKey,\r\n      null,\r\n      \"toolbar=no, width=800, height=1000, top=0, left=0\"\r\n    );\r\n    localStorage.removeItem(this.IdentityUsersKey);\r\n  }\r\n\r\n  logoutAsync(publicKey) {\r\n    return new Promise((resolve, reject) => {\r\n      this.identityWindow = window.open(\r\n        \"https://identity.deso.org/logout?publicKey=\" + publicKey,\r\n        null,\r\n        \"toolbar=no, width=800, height=1000, top=0, left=0\"\r\n      );\r\n      this.loginResolve = resolve;\r\n    });\r\n  }\r\n\r\n  signTxAsync(transactionHex) {\r\n    return new Promise((resolve, reject) => {\r\n      this.signTxResolve = resolve;\r\n      this.transactionHex = transactionHex;\r\n      this.getInfo();\r\n\r\n      const id = this.uuid();\r\n      const user = JSON.parse(localStorage.getItem(this.IdentityUsersKey));\r\n      const payload = {\r\n        accessLevel: user.accessLevel,\r\n        accessLevelHmac: user.accessLevelHmac,\r\n        encryptedSeedHex: user.encryptedSeedHex,\r\n        transactionHex: transactionHex,\r\n      };\r\n\r\n      this.source.postMessage(\r\n        {\r\n          id: id,\r\n          service: \"identity\",\r\n          method: \"sign\",\r\n          payload: payload,\r\n        },\r\n        \"*\"\r\n      );\r\n    });\r\n  }\r\n\r\n  approveSignTx(transactionHex) {\r\n    this.identityWindow = window.open(\r\n      \"https://identity.deso.org/approve?tx=\" + transactionHex,\r\n      null,\r\n      \"toolbar=no, width=800, height=1000, top=0, left=0\"\r\n    );\r\n  }\r\n\r\n  uuid() {\r\n    return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\r\n      /[xy]/g,\r\n      function (c) {\r\n        var r = (Math.random() * 16) | 0,\r\n          v = c === \"x\" ? r : (r & 0x3) | 0x8;\r\n        return v.toString(16);\r\n      }\r\n    );\r\n  }\r\n  getInfo() {\r\n    console.log(\"getinfo\");\r\n    const id = this.uuid();\r\n\r\n    this.source.postMessage(\r\n      {\r\n        id: id,\r\n        service: \"identity\",\r\n        method: \"info\",\r\n      },\r\n      \"*\"\r\n    );\r\n  }\r\n\r\n  handleLogin(payload) {\r\n    console.log(payload);\r\n    if (this.identityWindow) {\r\n      this.identityWindow.close();\r\n      this.identityWindow = null;\r\n      const user = payload.users[payload.publicKeyAdded];\r\n      if (user) {\r\n        user[\"publicKey\"] = payload.publicKeyAdded;\r\n      }\r\n      localStorage.setItem(this.IdentityUsersKey, JSON.stringify(user));\r\n      this.loginResolve(user);\r\n    }\r\n  }\r\n\r\n  handleSign(payload) {\r\n    console.log(payload);\r\n\r\n    const signedTransactionHex = payload[\"signedTransactionHex\"];\r\n    if (this.identityWindow) {\r\n      this.identityWindow.close();\r\n      this.identityWindow = null;\r\n    }\r\n    this.signTxResolve(signedTransactionHex);\r\n  }\r\n\r\n  respond(e, t, n) {\r\n    e.postMessage(\r\n      {\r\n        id: t,\r\n        service: \"identity\",\r\n        payload: n,\r\n      },\r\n      \"*\"\r\n    );\r\n  }\r\n\r\n  handleInit(e) {\r\n    if (!this.init) {\r\n      this.init = true;\r\n\r\n      for (const e of this.pendingRequests) {\r\n        console.log(\"i'm in the pendingRequests loop\");\r\n        e.source.postMessage(e, \"*\");\r\n      }\r\n\r\n      this.pendingRequests = [];\r\n      this.pm_id = e.data.id;\r\n      this.source = e.source;\r\n      console.log(\"this.source\", this.source);\r\n    }\r\n    this.respond(e.source, e.data.id, {});\r\n  }\r\n\r\n  postMessage(e) {\r\n    this.init\r\n      ? this.iframe.contentWindow.postMessage(e, \"*\")\r\n      : this.pendingRequests.push(e);\r\n  }\r\n\r\n  addListener() {\r\n    window.addEventListener(\"message\", (message) => {\r\n      // console.log(message)\r\n\r\n      const {\r\n        data: {method, service, payload}} = message;\r\n      if (service !== \"identity\") {\r\n        return;\r\n      }\r\n\r\n      if (method === \"initialize\") {\r\n        this.handleInit(message);\r\n      } else if (\"signedTransactionHex\" in payload) {\r\n        console.log(\"signedTransactionHex\", payload);\r\n        this.handleSign(payload);\r\n      } else if (\"approvalRequired\" in payload) {\r\n        console.log(\"approvalRequired\", payload);\r\n        this.approveSignTx(this.transactionHex);\r\n      } else if (method === \"login\") {\r\n        this.handleLogin(payload);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport default DesoIdentity;\r\n"]},"metadata":{},"sourceType":"module"}